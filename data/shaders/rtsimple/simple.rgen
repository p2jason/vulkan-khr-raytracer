#version 460
#extension GL_EXT_ray_tracing : require
#extension GL_GOOGLE_include_directive : require

#include "rtsimple/common.glsl"

layout(location = 0) rayPayloadEXT hitPayload payload;

layout(set = 0, binding = 0) uniform accelerationStructureEXT topLevelAS;
layout(set = 1, binding = 0, rgba32f) uniform image2D image;

void main() {
	vec2 pixelUV = (vec2(gl_LaunchIDEXT.xy) + vec2(0.5)) / vec2(gl_LaunchSizeEXT.xy);

	vec3 direction;
	{
		vec2 rUV = 2.0 * pixelUV - 1.0;
		rUV *= tan(70.0 / 2.0);
		rUV.x *= float(gl_LaunchSizeEXT.x) / float(gl_LaunchSizeEXT.y);
		rUV.y *= -1;

		direction = normalize(vec3(rUV, -1.0));
	}

	vec3 origin = vec3(0, 1, 10);

	uint rayFlags = gl_RayFlagsOpaqueEXT;
	float tMin = 0.01;
	float tMax = 10000.0;

	traceRayEXT(topLevelAS, rayFlags, 0xFF, 0, 0, 0, origin, tMin, direction, tMax, 0);

	imageStore(image, ivec2(gl_LaunchIDEXT.xy), vec4(payload.hitValue, 1.0));
}